{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js\";\nimport React, { Component } from \"react\";\nimport \"../Css/MapMarker.css\";\nimport axios from \"axios\";\n\nrequire('dotenv').config();\n\nclass MapMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let apiKey = process.env.DARK_SKY; // Setting the APIURL \n\n    let WeatherURL = \"https://api.darksky.net/forecast/\" + apiKey + \"/\" + this.props.lat + \",\" + this.props.lng;\n    axios.get(WeatherURL).then(response => {\n      debugger;\n      this.setState({\n        weather: response.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  render() {\n    console.log(this.state.weather);\n    let weather = this.state.weather.map(weather => React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, weather.currently.summary)));\n    return React.createElement(\"div\", {\n      className: \"MapMarker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.name), weather);\n  }\n\n}\n\nexport default MapMarker;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js"],"names":["React","Component","axios","require","config","MapMarker","constructor","props","state","weather","componentDidMount","bind","apiKey","process","env","DARK_SKY","WeatherURL","lat","lng","get","then","response","setState","data","catch","error","render","console","log","map","currently","summary","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDD,EAAAA,iBAAiB,GAAG;AAChB,QAAIE,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAzB,CADgB,CAEhB;;AACA,QAAIC,UAAU,GAAM,sCACAJ,MADA,GACS,GADT,GAEA,KAAKL,KAAL,CAAWU,GAFX,GAGA,GAHA,GAGM,KAAKV,KAAL,CAAWW,GAHrC;AAKAhB,IAAAA,KAAK,CAACiB,GAAN,CAAUH,UAAV,EACCI,IADD,CACQC,QAAD,IAAY;AACf;AACA,WAAKC,QAAL,CAAc;AAACb,QAAAA,OAAO,EAAEY,QAAQ,CAACE;AAAnB,OAAd;AACH,KAJD,EAMCC,KAND,CAMQC,KAAD,IAAU;AACb,aAAOA,KAAP;AACH,KARD;AASH;;AACDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWC,OAAvB;AACA,QAAIA,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBoB,GAAnB,CAAuBpB,OAAO,IACxC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACqB,SAAR,CAAkBC,OAAvB,CADJ,CADU,CAAd;AAKJ,WACY;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKxB,KAAL,CAAWyB,IAAhB,CADJ,EAEKvB,OAFL,CADZ;AAQC;;AA1C6B;;AA6ClC,eAAeJ,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Css/MapMarker.css\"\nimport axios from \"axios\";\nrequire('dotenv').config()\n\n\nclass MapMarker extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            weather: [],\n        }; \n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    componentDidMount() {\n        let apiKey = process.env.DARK_SKY;\n        // Setting the APIURL \n        let WeatherURL  =   \"https://api.darksky.net/forecast/\" + \n                            apiKey + \"/\" +\n                            this.props.lat + \n                            \",\" + this.props.lng;\n\n        axios.get(WeatherURL)\n        .then( (response)=>{\n            debugger\n            this.setState({weather: response.data})   \n        })\n        \n        .catch((error)=> {\n            return error\n        });\n    }\n    render() {\n        console.log(this.state.weather)\n        let weather = this.state.weather.map(weather => (\n            <div className=\"weather\">\n                <h1>{weather.currently.summary}</h1>\n            </div>\n        ))\n    return(\n                <div className=\"MapMarker\">\n                    <h1>{this.props.name}</h1>\n                    {weather}\n                </div>\n\n\n    )\n    }\n}\n\nexport default MapMarker;"]},"metadata":{},"sourceType":"module"}