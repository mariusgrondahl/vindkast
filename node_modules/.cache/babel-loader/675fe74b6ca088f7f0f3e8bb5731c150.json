{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Pages/Map.js\";\nimport React, { Component } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport MapMarker from \"../Components/MapMarker\";\nimport SurfSpot from \"../Components/SurfSpot\"; // import CreateMarker from \"../Components/CreateMarker\";\n\nimport TopBar from \"../Components/TopBar\";\nimport Navbar from \"../Components/Navbar\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\";\nimport Login from \"../Pages/Login\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      surfspots: [],\n      latitude: 50,\n      longitude: 5,\n      showPopup: {\n        showPopup: true\n      },\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 50,\n        longitude: 5,\n        zoom: 4\n      }\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    // Setting the APIURL\n    let MarkerURL = \"\".concat(process.env.REACT_APP_API, \"/marker/all-markers\");\n    axios.get(MarkerURL).then(response => {\n      this.setState({\n        surfspots: response.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  getLatLng(event) {\n    console.log(event.lngLat);\n  }\n\n  render() {\n    let surfspot = this.state.surfspots.map(surfspot => React.createElement(Marker, {\n      latitude: parseInt(surfspot.lat),\n      longitude: parseInt(surfspot.lng),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(SurfSpot, {\n      name: surfspot.spot_name,\n      img: surfspot.img,\n      open_modal: this.openModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(TopBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(ReactMapGL, Object.assign({\n      onClick: this.getLatLng,\n      mapboxApiAccessToken: \"pk.eyJ1IjoibWFyaXVzZ3JvbmRhaGwiLCJhIjoiY2p6OHZpb2JpMDMwNTNkbzJlbnJyb2lkdiJ9.zTQFrIU4__uaAPGzAUQSFw\"\n    }, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), surfspot, this.state.surfspot && surfspot));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Pages/Map.js"],"names":["React","Component","ReactMapGL","Marker","Popup","MapMarker","SurfSpot","TopBar","Navbar","axios","Modal","Login","Map","constructor","props","state","surfspots","latitude","longitude","showPopup","viewport","width","height","zoom","componentDidMount","bind","MarkerURL","process","env","REACT_APP_API","get","then","response","setState","data","catch","error","getLatLng","event","console","log","lngLat","render","surfspot","map","parseInt","lat","lng","spot_name","img","openModalHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport MapMarker from \"../Components/MapMarker\";\nimport SurfSpot from \"../Components/SurfSpot\";\n// import CreateMarker from \"../Components/CreateMarker\";\nimport TopBar from \"../Components/TopBar\";\nimport Navbar from \"../Components/Navbar\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\";\nimport Login from \"../Pages/Login\";\n\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            surfspots: [],\n            latitude: 50,\n            longitude: 5,\n            showPopup:{\n                showPopup: true\n            },\n            viewport: {\n                width: \"100vw\",\n                height: \"100vh\",\n                latitude: 50,\n                longitude: 5,\n                zoom: 4\n            }\n        }; \n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    componentDidMount() {\n        // Setting the APIURL\n        let MarkerURL  = `${process.env.REACT_APP_API}/marker/all-markers`;        \n        axios.get(MarkerURL)\n        .then( (response)=>{\n            this.setState({surfspots: response.data})            \n        })\n        .catch((error)=> {\n            return error\n        });\n    }\n\n    getLatLng(event)  {\n        console.log(event.lngLat)\n    }\n\n    \n    render() {\n        let surfspot = this.state.surfspots.map(surfspot => (\n                    <Marker latitude={parseInt(surfspot.lat)} longitude={parseInt(surfspot.lng)}>\n                            <SurfSpot \n                                name={surfspot.spot_name}\n                                img={surfspot.img}\n                                open_modal={this.openModalHandler}\n                            />\n                    </Marker>\n        ))\n        return (\n            <div>     \n                <Navbar/>\n                <TopBar />\n                <ReactMapGL \n                    onClick={this.getLatLng}\n                    mapboxApiAccessToken=\"pk.eyJ1IjoibWFyaXVzZ3JvbmRhaGwiLCJhIjoiY2p6OHZpb2JpMDMwNTNkbzJlbnJyb2lkdiJ9.zTQFrIU4__uaAPGzAUQSFw\" \n                    {...this.state.viewport} \n                    onViewportChange={(viewport) => this.setState({viewport})}\n                >                \n                {surfspot}\n                {this.state.surfspot && surfspot}\n               \n\n\n\n                </ReactMapGL>\n            </div>\n\n\n    );\n  }\n}\n\nexport default Map;\n\n"]},"metadata":{},"sourceType":"module"}