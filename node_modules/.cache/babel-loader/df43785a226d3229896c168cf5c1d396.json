{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js\";\nimport React, { Component } from \"react\";\nimport \"../Css/MapMarker.css\"; //import axios from \"../utils/Axios\";\n\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let MarkerURL = \"\".concat(process.env.REACT_APP_API, \"/marker/all-markers\");\n    let WeatherURL = \"http://api.weatherbit.io/v2.0/current?&key=ec2ab6a62d214719a8fcbf322cb7ce96&lat=38.123&lon=-78.543\"; // let WeatherURL = process.env.REACT_APP_WEATHER_BIT + \"lat=\" + this.props.lat + \"&long=\" + this.props.lng + \"&\"+ process.env.REACT_APP_WEATHER_BIT_KEY;  \n\n    axios.get(WeatherURL).then(response => {\n      this.setState({\n        weather: response.concat([])\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  render() {\n    let weatherForecast = this.state.weather.map(forecast => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"forecast.timezone\")));\n    return React.createElement(\"div\", {\n      className: \"MapMarker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.name), weatherForecast);\n  }\n\n}\n\nexport default MapMarker;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js"],"names":["React","Component","axios","MapMarker","constructor","props","state","weather","componentDidMount","bind","MarkerURL","process","env","REACT_APP_API","WeatherURL","get","then","response","setState","concat","catch","error","render","weatherForecast","map","forecast","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,GAAG;AAChB,QAAIE,SAAS,aAAOC,OAAO,CAACC,GAAR,CAAYC,aAAnB,wBAAb;AACA,QAAIC,UAAU,GAAG,oGAAjB,CAFgB,CAGhB;;AAEAZ,IAAAA,KAAK,CAACa,GAAN,CAAUD,UAAV,EACCE,IADD,CACQC,QAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAEU,QAAQ,CAACE,MAAT,CAAgB,EAAhB;AAAV,OAAd;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAU;AACb,aAAOA,KAAP;AACH,KAND;AAOH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAG,KAAKjB,KAAL,CAAWC,OAAX,CAAmBiB,GAAnB,CAAuBC,QAAQ,IACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADkB,CAAtB;AAMJ,WACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKpB,KAAL,CAAWqB,IAAhB,CADJ,EAEKH,eAFL,CADR;AAMC;;AApC6B;;AAuClC,eAAepB,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Css/MapMarker.css\"\n//import axios from \"../utils/Axios\";\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            weather: []\n        }; \n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    \n    componentDidMount() {  \n        let MarkerURL  = `${process.env.REACT_APP_API}/marker/all-markers`;       \n        let WeatherURL = \"http://api.weatherbit.io/v2.0/current?&key=ec2ab6a62d214719a8fcbf322cb7ce96&lat=38.123&lon=-78.543\"\n        // let WeatherURL = process.env.REACT_APP_WEATHER_BIT + \"lat=\" + this.props.lat + \"&long=\" + this.props.lng + \"&\"+ process.env.REACT_APP_WEATHER_BIT_KEY;  \n\n        axios.get(WeatherURL)\n        .then( (response)=>{\n            this.setState({weather: response.concat([])});        \n        })\n        .catch((error)=> {\n            return error\n        });\n    }\n    render() {\n        let weatherForecast = this.state.weather.map(forecast => (\n            <div>\n                <h1>forecast.timezone</h1>\n            </div>\n     \n        ))\n    return(\n            <div className=\"MapMarker\">\n                <h1>{this.props.name}</h1>\n                {weatherForecast}\n            </div>\n        )\n    }\n}\n\nexport default MapMarker;"]},"metadata":{},"sourceType":"module"}