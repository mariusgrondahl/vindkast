{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mariusgrondahl/Documents/GitHub/vindkast/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Routes/PrivateRoute.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\nconst auth = new Auth();\n\nconst ProtectedRoute = (_ref) => {\n  let Component = _ref.component,\n      redirectUrl = _ref.redirectUrl,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"redirectUrl\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      var user = auth.getUser();\n\n      if (user) {\n        return React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: redirectUrl || '/',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nfunction PrivateRoute(_ref2) {\n  let Component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => auth.loggedIn ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Routes/PrivateRoute.js"],"names":["React","BrowserRouter","Router","Route","Link","Redirect","Auth","auth","ProtectedRoute","Component","component","redirectUrl","rest","props","user","getUser","pathname","state","from","location","PrivateRoute","loggedIn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,QAA/C,QAA8D,kBAA9D;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,IAAI,GAAG,IAAID,IAAJ,EAAb;;AAEA,MAAME,cAAc,GAAI,UAAkD;AAAA,MAArCC,SAAqC,QAAhDC,SAAgD;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAVC,IAAU;;AACtE,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAK,IAAK;AACjB,UAAIC,IAAI,GAAGP,IAAI,CAACQ,OAAL,EAAX;;AACA,UAAGD,IAAH,EAAQ;AACN,eAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACG,YAAAA,QAAQ,EAAEL,WAAW,IAAI,GAA1B;AAA+BM,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAAtC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAaD,CAdH;;AAiBA,SAASC,YAAT,QAAyD;AAAA,MAAtBX,SAAsB,SAAjCC,SAAiC;AAAA,MAARE,IAAQ;;AACrD,SACE,oBAAC,KAAD,oBAAWA,IAAX;AACE,IAAA,MAAM,EAAEC,KAAK,IACXN,IAAI,CAACc,QAAL,GAAiB,oBAAC,SAAD,oBAAeR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB,GAIC,oBAAC,QAAD;AACG,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAFL,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;AAED,eAAeC,YAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect} from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst auth = new Auth();\n\nconst ProtectedRoute  = ({component: Component, redirectUrl, ...rest}) => {\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n          var user = auth.getUser();\n          if(user){\n            return <Component {...props} />\n          } else {\n            return <Redirect to={{pathname: redirectUrl || '/', state: {from: props.location}}} />\n          }\n        }}\n      />\n    )\n  }\n  \n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n      <Route {...rest}\n        render={props =>\n          auth.loggedIn ? (<Component {...props} />) \n\n          :\n\n          (<Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  export default PrivateRoute;"]},"metadata":{},"sourceType":"module"}