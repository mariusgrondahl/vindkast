{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Pages/Map.js\";\nimport React, { Component } from 'react';\nimport ReactMapGL, { Marker, GeolocateControl, Popup } from 'react-map-gl';\nimport SurfSpot from \"../Components/SurfSpot\";\nimport TopBar from \"../Components/TopBar\";\nimport Navbar from \"../Components/Navbar\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibWFyaXVzZ3JvbmRhaGwiLCJhIjoiY2p6OHZpb2JpMDMwNTNkbzJlbnJyb2lkdiJ9.zTQFrIU4__uaAPGzAUQSFw';\nconst geolocateStyle = {\n  position: 'absolute',\n  top: 0,\n  bottom: 40,\n  left: 0,\n  margin: 10\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onViewportChange = viewport => this.setState({\n      viewport\n    });\n\n    this.state = {\n      surfspots: [],\n      latitude: 50,\n      longitude: 5,\n      showPopup: {\n        showPopup: true\n      },\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 50,\n        longitude: 5,\n        zoom: 4,\n        bearing: 0,\n        pitch: 0\n      }\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    // Setting the APIURL\n    let MarkerURL = \"\".concat(process.env.REACT_APP_API, \"/marker/all-markers\");\n    axios.get(MarkerURL).then(response => {\n      this.setState({\n        surfspots: response.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  getLatLng(event) {\n    console.log(event.lngLat);\n  }\n\n  render() {\n    let surfspot = this.state.surfspots.map(surfspot => React.createElement(Marker, {\n      latitude: parseInt(surfspot.lat),\n      longitude: parseInt(surfspot.lng),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(SurfSpot, {\n      name: surfspot.spot_name,\n      img: surfspot.img,\n      id: surfspot._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(TopBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(ReactMapGL, Object.assign({\n      onClick: this.getLatLng,\n      mapboxApiAccessToken: MAPBOX_TOKEN\n    }, this.state.viewport, {\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(GeolocateControl, {\n      style: geolocateStyle,\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), surfspot));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Pages/Map.js"],"names":["React","Component","ReactMapGL","Marker","GeolocateControl","Popup","SurfSpot","TopBar","Navbar","axios","Modal","MAPBOX_TOKEN","geolocateStyle","position","top","bottom","left","margin","Map","constructor","props","_onViewportChange","viewport","setState","state","surfspots","latitude","longitude","showPopup","width","height","zoom","bearing","pitch","componentDidMount","bind","MarkerURL","process","env","REACT_APP_API","get","then","response","data","catch","error","getLatLng","event","console","log","lngLat","render","surfspot","map","parseInt","lat","lng","spot_name","img","_id","enableHighAccuracy"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactMapGL, {Marker, GeolocateControl, Popup} from 'react-map-gl';\nimport SurfSpot from \"../Components/SurfSpot\";\nimport TopBar from \"../Components/TopBar\";\nimport Navbar from \"../Components/Navbar\";\nimport axios from \"axios\";\nimport Modal from \"../Components/Modal\";\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibWFyaXVzZ3JvbmRhaGwiLCJhIjoiY2p6OHZpb2JpMDMwNTNkbzJlbnJyb2lkdiJ9.zTQFrIU4__uaAPGzAUQSFw';\n\nconst geolocateStyle = {\n    position: 'absolute',\n    top: 0,\n    bottom: 40,\n    left: 0,\n    margin: 10\n  };\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            surfspots: [],\n            latitude: 50,\n            longitude: 5,\n            showPopup:{\n                showPopup: true\n            },\n            viewport: {\n                width: \"100vw\",\n                height: \"100vh\",\n                latitude: 50,\n                longitude: 5,\n                zoom: 4,\n                bearing: 0,\n                pitch: 0\n            }\n        }; \n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    componentDidMount() {\n        // Setting the APIURL\n        let MarkerURL  = `${process.env.REACT_APP_API}/marker/all-markers`;        \n        axios.get(MarkerURL)\n        .then( (response)=>{\n            this.setState({surfspots: response.data})            \n        })\n        .catch((error)=> {\n            return error\n        });\n    }\n\n    getLatLng(event)  {\n        console.log(event.lngLat)\n    }\n\n    _onViewportChange = viewport => this.setState({viewport});\n\n    \n    render() {\n        let surfspot = this.state.surfspots.map(surfspot => (\n                    <Marker \n                        latitude={parseInt(surfspot.lat)} \n                        longitude={parseInt(surfspot.lng)}\n                    >\n                            <SurfSpot \n                                name={surfspot.spot_name}\n                                img={surfspot.img}\n                                id={surfspot._id}\n                            />\n                    </Marker>\n        ))\n        return (\n            <div>     \n                <Navbar/>\n                <TopBar />\n                <ReactMapGL \n                    onClick={this.getLatLng}\n                    mapboxApiAccessToken={MAPBOX_TOKEN} \n                    {...this.state.viewport} \n                    onViewportChange={(viewport) => this.setState({viewport})}\n                >           \n                    <GeolocateControl\n                        style={geolocateStyle}\n                        positionOptions={{enableHighAccuracy: true}}\n                        trackUserLocation={true}\n                     />     \n                {surfspot}\n\n\n                </ReactMapGL>\n            </div>\n\n\n    );\n  }\n}\n\nexport default Map;\n\n"]},"metadata":{},"sourceType":"module"}