{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js\";\nimport React, { Component } from \"react\";\nimport \"../Css/MapMarker.css\"; //import axios from \"../utils/Axios\";\n\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let WeatherURL = process.env.REACT_APP_DARK_SKY + \"/\" + this.props.lat + \",\" + this.props.lng;\n    axios({\n      method: \"GET\",\n      url: WeatherURL\n    }).then(response => {\n      this.setState({\n        weather: response.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  render() {\n    let weather = this.state.weather.map(weather => React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, weather.currently.windSpeed), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, weather.currently.summary)));\n    return React.createElement(\"div\", {\n      className: \"MapMarker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.name), weather);\n  }\n\n}\n\nexport default MapMarker;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js"],"names":["React","Component","axios","MapMarker","constructor","props","state","weather","componentDidMount","bind","WeatherURL","process","env","REACT_APP_DARK_SKY","lat","lng","method","url","then","response","setState","data","catch","error","render","map","currently","windSpeed","summary","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AACDD,EAAAA,iBAAiB,GAAG;AAChB,QAAIE,UAAU,GAAKC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,GAAjC,GAAuC,KAAKR,KAAL,CAAWS,GAAlD,GAAwD,GAAxD,GAA8D,KAAKT,KAAL,CAAWU,GAA5F;AAEAb,IAAAA,KAAK,CAAC;AACFc,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAEP;AAFH,KAAD,CAAL,CAKCQ,IALD,CAKQC,QAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACb,QAAAA,OAAO,EAAEY,QAAQ,CAACE;AAAnB,OAAd;AACH,KAPD,EASCC,KATD,CASQC,KAAD,IAAU;AACb,aAAOA,KAAP;AACH,KAXD;AAYH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIjB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBkB,GAAnB,CAAuBlB,OAAO,IACxC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACmB,SAAR,CAAkBC,SAAvB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKpB,OAAO,CAACmB,SAAR,CAAkBE,OAAvB,CAFJ,CADU,CAAd;AAMJ,WACY;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKvB,KAAL,CAAWwB,IAAhB,CADJ,EAEKtB,OAFL,CADZ;AAQC;;AAxC6B;;AA2ClC,eAAeJ,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Css/MapMarker.css\"\n//import axios from \"../utils/Axios\";\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            weather: [],\n        }; \n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    componentDidMount() {  \n        let WeatherURL   = process.env.REACT_APP_DARK_SKY + \"/\" + this.props.lat + \",\" + this.props.lng;  \n\n        axios({\n            method: \"GET\",\n            url: WeatherURL,\n    \n        })\n        .then( (response)=>{\n            this.setState({weather: response.data})   \n        })\n        \n        .catch((error)=> {\n            return error\n        });\n    }\n    render() {\n        let weather = this.state.weather.map(weather => (\n            <div className=\"weather\">\n                <h1>{weather.currently.windSpeed}</h1>\n                <h1>{weather.currently.summary}</h1>\n            </div>\n        ))\n    return(\n                <div className=\"MapMarker\">\n                    <h1>{this.props.name}</h1>\n                    {weather}\n                </div>\n\n\n    )\n    }\n}\n\nexport default MapMarker;"]},"metadata":{},"sourceType":"module"}