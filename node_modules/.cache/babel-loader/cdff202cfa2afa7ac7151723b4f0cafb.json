{"ast":null,"code":"var _jsxFileName = \"/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js\";\nimport React, { Component } from \"react\";\nimport \"../Css/MapMarker.css\"; //import axios from \"../utils/Axios\";\n\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let WeatherURL = process.env.REACT_APP_WEATHER_BIT + \"&lat=\" + this.props.lat + \"&lon=\" + this.props.lng;\n    axios.get(WeatherURL).then(response => {\n      this.setState({\n        weather: response.data.data\n      });\n    }).catch(error => {\n      return error;\n    });\n  }\n\n  render() {\n    let weatherForecast = this.state.weather.map(forecast => React.createElement(\"div\", {\n      className: \"Forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, forecast.city_name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" if (\", forecast.temp, \")\", forecast.temp), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), forecast.wind_cdir_full, \"(\", forecast.wind_cdir, \")\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"M/S \"), forecast.wind_spd), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"M/S \"), forecast.wind_spd)));\n    return React.createElement(\"div\", {\n      className: \"MapMarker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, weatherForecast);\n  }\n\n}\n\nexport default MapMarker;","map":{"version":3,"sources":["/Users/mariusgrondahl/Documents/GitHub/vindkast/src/Components/MapMarker.js"],"names":["React","Component","axios","MapMarker","constructor","props","state","weather","componentDidMount","bind","WeatherURL","process","env","REACT_APP_WEATHER_BIT","lat","lng","get","then","response","setState","data","catch","error","render","weatherForecast","map","forecast","city_name","temp","wind_cdir_full","wind_cdir","wind_spd"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,GAAG;AAEhB,QAAIE,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,GAAoC,OAApC,GAA8C,KAAKR,KAAL,CAAWS,GAAzD,GAA+D,OAA/D,GAAyE,KAAKT,KAAL,CAAWU,GAArG;AACAb,IAAAA,KAAK,CAACc,GAAN,CAAUN,UAAV,EACCO,IADD,CACQC,QAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAEW,QAAQ,CAACE,IAAT,CAAcA;AAAxB,OAAd;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAU;AACb,aAAOA,KAAP;AACH,KAND;AAOH;;AACDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,eAAe,GAAG,KAAKlB,KAAL,CAAWC,OAAX,CAAmBkB,GAAnB,CAAuBC,QAAQ,IACjD;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAQ,CAACC,SAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUD,QAAQ,CAACE,IAAnB,OACCF,QAAQ,CAACE,IADV,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,EAAiBF,QAAQ,CAACG,cAA1B,OAA2CH,QAAQ,CAACI,SAApD,MANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,EAAqBJ,QAAQ,CAACK,QAA9B,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,EAAqBL,QAAQ,CAACK,QAA9B,CARJ,CADkB,CAAtB;AAYJ,WACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,eADL,CADR;AAKC;;AAzC6B;;AA4ClC,eAAerB,SAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Css/MapMarker.css\"\n//import axios from \"../utils/Axios\";\nimport axios from \"axios\";\n\nclass MapMarker extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            weather: []\n        }; \n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    \n    componentDidMount() {  \n\n        let WeatherURL = process.env.REACT_APP_WEATHER_BIT + \"&lat=\" + this.props.lat + \"&lon=\" + this.props.lng;  \n        axios.get(WeatherURL)\n        .then( (response)=>{\n            this.setState({weather: response.data.data});   \n        })\n        .catch((error)=> {\n            return error\n        });\n    }\n    render() {\n        \n        let weatherForecast = this.state.weather.map(forecast => (\n            <div className=\"Forecast\">\n                <h1>{forecast.city_name}</h1>\n                <h1> if ({forecast.temp})\n                {forecast.temp}\n                \n                </h1>\n                <p><span></span>{forecast.wind_cdir_full}({forecast.wind_cdir})</p>\n                <p><span>M/S </span>{forecast.wind_spd}</p>\n                <p><span>M/S </span>{forecast.wind_spd}</p>\n            </div>   \n        ))\n    return(\n            <div className=\"MapMarker\">\n                {weatherForecast}\n            </div>\n        )\n    }\n}\n\nexport default MapMarker;"]},"metadata":{},"sourceType":"module"}